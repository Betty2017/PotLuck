package PotLuck;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import PotLuck.User;
import PotLuck.UserRepository;




@Controller    // This means that this class is a Controller
@RequestMapping(path="/register") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@GetMapping(path="/register") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String food) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		User n = new User();
		n.setName(name);
		n.setFood(food);
		userRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}



/*
@Controller    // This means that this class is a Controller
//@RequestMapping(path="/register") 
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@RequestMapping(value ="/register", method= RequestMethod.GET)
	   public String registerForm(Model model) {
		 model.addAttribute( new User());
			return "register";
	    }

	@RequestMapping(value ="/potluck", method= RequestMethod.POST)
	   public String saveRegister(@ModelAttribute User user) {
		userRepository.save(user);
			return "redirect:/display";
	    }
	
	@GetMapping(path ="/display")
	public @ResponseBody Iterable<User> getAllPotluckers(){
		return userRepository.findAll();
	
	}
}*/